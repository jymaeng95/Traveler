<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.traveler.mapper.AccompanyBoardMapper">
   <!-- id-column : DB컬럼명 property : 객체멤버변수 명 -->
   <!-- result : 기본키 이외 멤버변수 지정 -->

   <resultMap id="AccompanyBoardVO"
      type="com.traveler.domain.AccompanyBoardVO">
      <id column="acc_bno" property="accBno" />
      <id column="planNo" property="planNo" />
      <id column="hostId" property="hostId" />
      <id column="title" property="title" />
      <id column="startDate" property="startDate" />
      <id column="planDate" property="planDate" />
      <result column="board_title" property="boardTitle" />
      <result column="reg_date" property="regDate" />
   </resultMap>

   <!-- 게시판 불러오기 -->
   <select id="readBoard" resultMap="AccompanyBoardVO">
      <![CDATA[
         select *
         from
            (
            select /*+INDEX_DESC(accompany_board acc_bno)*/
               rownum rn, acc_bno, planNo, hostId, title, board_title, reg_date, startDate
            from accompany_board
            where
         ]]>

      <include refid="criteria"></include>
      
       <![CDATA[
            rownum <= #{pageNum} * 10
            )
         where rn > (#{pageNum} - 1) * 10
         order by acc_bno desc
         ]]>
   </select>

   <!-- 페이징 count -->
   <select id="cntforpaging" resultType="int">
      select count(acc_bno) from accompany_board
      where
      <include refid="criteria"></include>
      acc_bno > 0
   </select>

   <!-- 글 불러오기 -->
   <select id="readAcc" resultMap="AccompanyBoardVO">
      select * from accompany_board
      where acc_bno = #{acc_bno}
   </select>



   <insert id="insertAcc">
      insert into accompany_board
      (acc_bno,planNo,hostId,title,board_title, startDate)
      values
      (acc_bno.nextval, #{planNo}, #{hostId}, #{title}, #{boardTitle},
      #{startDate})
   </insert>


   <update id="updateAcc">
      update accompany_board
      set board_title = #{boardTitle}
      where planNo = #{planNo} and title = #{title}
   </update>

   <sql id="criteria">
      <trim prefix="(" suffix=") AND " prefixOverrides="OR">
         <choose>
            <when test="type == 'T'.toString()">
               title like '%'||#{keyword}||'%'
            </when>
            <when test="type == 'C'.toString()">
               board_title like '%'||#{keyword}||'%'
            </when>
            <when test="type == 'W'.toString()">
               hostId like '%'||#{keyword}||'%'
            </when>
         </choose>
      </trim>
   </sql>



   <select id="readRecommendAccompany" parameterType="HashMap"
      resultType="Map">
   <![CDATA[
      select ac.acc_bno, ac.planno, ac.hostid, ac.board_title, ac.title, ac.reg_date, ac.startdate, ac.date_rank, acc_host.cur_person, acc_host.limit_person, acc_host.acc_descript
      from acc_host, 
         (select a.acc_bno, a.planno, a.hostid, a.board_title, a.title, a.reg_date, a.startdate, rank() over(order by b.min_date) AS date_rank
         from accompany_board a, 
            (select accompany_board.acc_bno, ABS((to_date(startDate, 'YYYY-MM-DD-HH24-MI') - to_date(#{startDate}, 'YYYY-MM-DD-HH24-MI'))*24*60) AS min_date
            from accompany_board, acc_host where accompany_board.acc_bno = acc_host.acc_bno and acc_host.cur_person != acc_host.limit_person) b
         where a.acc_bno = b.acc_bno and a.title = #{title} and SUBSTR(a.startDate,1,10) = #{planDate}) ac
      where ac.acc_bno = acc_host.acc_bno and date_rank <= 3
   ]]>
   </select>

   <select id="readAccBno" resultType="int">
      select acc_bno
      from
      accompany_board
      where hostId = #{hostId} and title = #{title} and
      planNo = #{planNo}
   </select>

   <delete id="deleteAcc">
      delete from accompany_board
      where planNo = #{planNo} and title = #{title}
   </delete>
   
   <select id="readbno" resultType="int">
      <![CDATA[
         select acc_bno
         from
            (
            select /*+INDEX_DESC(accompany_board acc_bno)*/
               rownum rn, acc_bno
            from accompany_board
            where rownum <= #{pageNum} * 10
            )
         where rn > (#{pageNum} - 1) * 10
         order by acc_bno desc
         ]]>
   </select>
   
   <select id="readmyAcc" resultMap="AccompanyBoardVO">
      select * from accompany_board
      where hostId = #{hostId}
   </select>
      
   <select id="readguestAcc" resultMap="AccompanyBoardVO">
      select * from accompany_board
      where acc_bno = #{accBno}
   </select>
   

</mapper>