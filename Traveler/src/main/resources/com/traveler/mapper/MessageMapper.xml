<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.traveler.mapper.MessageMapper">
	<!-- id-column : DB컬럼명 property : 객체멤버변수 명  -->
	<!-- result : 기본키 이외 멤버변수 지정 -->
<resultMap id="MessageVO" type="com.traveler.domain.MessageVO">
	<id column="mid" property="mid"/>
	<result column="sender" property="sender"/>
	<result column="userId" property="userId"/>
	<result column="mcontent" property="mcontent"/>
	<result column="senddate" property="senddate"/>
	<result column="readstatus" property="readstatus"/>
	<result column="status" property="status"/>
	<result column="pageNum" property="pageNum"/>
	<result column="tabPage" property="tabPage"/>
	<result column="arcPage" property="arcPage"/>
	<collection  property="memberVO" ofType="com.traveler.domain.MemberVO">
		<id column="userId" property="userId"/>
		<result column="userPw" property="userPw"/>
		<result column="email" property="email"/>
		<result column="nickname" property="nickname"/>
		<result column="is_kakao" property="is_kakao"/>
	</collection>

</resultMap>
	
	<!--메세지 추가 -->
	<insert id="messageInsert">
		insert into message (mid, sender, userId, mcontent)
		values (tmp_seq.NEXTVAL, #{sender}, #{userId}, #{mcontent})
	</insert>
	
	<!-- paging -->
	<!-- 받은 쪽지함 불러오기 -->
	<select id="messagePaging" resultMap="MessageVO">
		<![CDATA[
		select *
		from
			(
			select /*+INDEX_DESC(message MSG_PK)*/
				rownum rn, mid, sender, message.userId, mcontent, senddate, readstatus, status
			from message, member
			where rownum <= #{pageNum} * 10 and message.userId = member.userId and member.userId = #{userId} and #{tabPage} = 'rcv_list'
			)
		where rn > (#{pageNum} - 1) * 10 
		]]>
	</select>
	
	<!-- 보낸쪽지함 불러오기 -->
	<select id="messagePaging2" resultMap="MessageVO">
		<![CDATA[
		select *
		from
			(
			select /*+INDEX_DESC(message MSG_PK)*/
				rownum rn, mid, sender, message.userId, mcontent, senddate, readstatus, status
			from message, member
			where rownum <= #{pageNum} * 10 and message.sender = member.userId and member.userId = #{userId} and #{tabPage} = 'send_list'
			)
		where rn > (#{pageNum} - 1) * 10 
		]]>
	</select>
	
	<!-- 보관함(받은 쪽지) -->
	<select id="messagePaging3" resultMap="MessageVO">
		<![CDATA[
		select *
		from
			(
			select /*+INDEX_DESC(message MSG_PK)*/
				rownum rn, mid, sender, message.userId, mcontent, senddate, readstatus, status
			from message, member
			where rownum <= #{pageNum} * 10 and message.userId = member.userId and member.userId = #{userId}
				and #{tabPage} = 'archive' and status = 1 and #{arcPage} = 'rcv_arc'
			)
		where rn > (#{pageNum} - 1) * 10 
		]]>
	</select>
	
	<!-- 보관함(보낸 쪽지) -->
		<select id="messagePaging4" resultMap="MessageVO">
		<![CDATA[
		select *
		from
			(
			select /*+INDEX_DESC(message MSG_PK)*/
				rownum rn, mid, sender, message.userId, mcontent, senddate, readstatus, status
			from message, member
			where rownum <= #{pageNum} * 10 and message.sender = member.userId and member.userId = #{userId} 
				and #{tabPage} = 'archive' and status = 1 and #{arcPage} = 'send_arc'
			)
		where rn > (#{pageNum} - 1) * 10 
		]]>
	</select>
	
	
	<select id="countMessage" resultType="int">
		select count(*)
		from message, member
		where message.userId = member.userId and member.userId = #{userId}
	</select>
		<select id="countMessage2" resultType="int">
		select count(*)
		from message, member
		where message.sender = member.userId and member.userId = #{userId}
	</select>
	
	<select id="countMessage3" resultType="int">
		select count(*)
		from message, member
		where message.userId = member.userId and member.userId = #{userId} and status = '1' 
	</select>
	<select id="countMessage4" resultType="int">
		select count(*)
		from message, member
		where message.sender = member.userId and member.userId = #{userId} and status = '1' 
	</select>

	<!-- delete -->
	<delete id="messageDelete">
		delete 
		from message
		where userId = #{userId} and mid = #{mid}
	</delete>
	
	<update id="messageUpdate">
		update message
		set status = #{status}
		where userId = #{userId} and mid = #{mid}
	</update>
	
	<update id="messageUpdate2">
		update message
		set	readstatus = #{readstatus}
		where userId = #{userId} and mid = #{mid}
	</update>
	

</mapper>

	